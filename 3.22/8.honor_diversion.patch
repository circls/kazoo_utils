diff --git a/applications/stepswitch/src/stepswitch.hrl b/applications/stepswitch/src/stepswitch.hrl
index 1740823..d5b1986 100644
--- a/applications/stepswitch/src/stepswitch.hrl
+++ b/applications/stepswitch/src/stepswitch.hrl
@@ -29,5 +29,9 @@
         ,wh_json:from_list([{'passive', 'true'}])
        ).
 
+-define(RULES_HONOR_DIVERSION
+        ,whapps_config:get_is_true(?SS_CONFIG_CAT, <<"cid_rules_honor_diversions">>, 'true')
+       ).
+
 -define(STEPSWITCH_HRL, 'true').
 -endif.
diff --git a/applications/stepswitch/src/stepswitch_resources.erl b/applications/stepswitch/src/stepswitch_resources.erl
index a9f24ea..bc30445 100644
--- a/applications/stepswitch/src/stepswitch_resources.erl
+++ b/applications/stepswitch/src/stepswitch_resources.erl
@@ -396,7 +396,10 @@ maybe_resource_to_endpoints(#resrc{id=Id
                             ,OffnetJObj
                             ,Endpoints
                            ) ->
-    CallerIdNumber = wapi_offnet_resource:outbound_caller_id_number(OffnetJObj),
+    CallerIdNumber = case ?RULES_HONOR_DIVERSION of
+                         'false' -> wapi_offnet_resource:outbound_caller_id_number(OffnetJObj);
+                         'true' -> check_diversion_fields(OffnetJObj)
+                     end,
     case filter_resource_by_rules(Id, Number, Rules, CallerIdNumber, CallerIdRules) of
         {'error','no_match'} -> Endpoints;
         {'ok', NumberMatch} ->
@@ -415,6 +418,16 @@ maybe_resource_to_endpoints(#resrc{id=Id
             maybe_add_proxies(EndpointList, Proxies, Endpoints)
     end.
 
+-spec check_diversion_fields(wapi_offnet_resource:req()) -> ne_binary().
+check_diversion_fields(OffnetJObj) ->
+    case wh_json:get_value([<<"Custom-SIP-Headers">>,<<"Diversions">>], OffnetJObj) of
+        [Diversion|_] ->
+            [_,CallerIdNumber,_] = binary:split(Diversion, [<<":">>,<<"@">>], ['global']),
+            CallerIdNumber;
+        _ ->
+            wapi_offnet_resource:outbound_caller_id_number(OffnetJObj)
+    end.
+
 -spec update_endpoint(wh_json:object(), wh_proplist(), wh_proplist()) ->
                              wh_json:object().
 update_endpoint(Endpoint, Updates, CCVUpdates) ->
